@page
@using System.Linq
@using Todo.Pages
@model IndexModel
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Todo</title>
    <link rel="stylesheet" href="~/node_modules/todomvc-common/base.css">
    <link rel="stylesheet" href="~/node_modules/todomvc-app-css/index.css">
</head>
<body>
<section class="todoapp">
    <header class="header">
        <h1>todos</h1>
        <form method="POST">
            <input class="new-todo" placeholder="What needs to be done?" name="TodoItem.Description" required autofocus>
            <button hidden asp-page-handler="create"></button>
        </form>
    </header>
    <!-- This section should be hidden by default and shown when there are todos -->
    @if (Model.TodoItems.Any())
    {
        <section class="main">
            <form method="POST">
                <input id="toggle-all" class="toggle-all" type="checkbox" @(Model.TodoItems.All(i => i.IsCompleted) ? "checked" : "")>
                <label for="toggle-all">Mark all as complete</label>
                <button name="markall" asp-page-handler="markall" hidden></button>
            </form>
            <ul class="todo-list">
                <!-- List items should get the class `editing` when editing and `completed` when marked as completed -->
                @foreach (var item in Model.TodoItems.Where(i => Model.TodoFilter == TodoFilter.All
                    || (Model.TodoFilter == TodoFilter.Active && !i.IsCompleted)
                    || (Model.TodoFilter == TodoFilter.Completed && i.IsCompleted)))
                {
                    <li class="@(item.IsCompleted ? "completed" : "")">
                        <form method="POST">
                            <button name="update" asp-page-handler="update" hidden></button>
                            <input type="hidden" name="TodoItem.Id" value="@item.Id">
                            <div class="view">
                                <input class="toggle" type="checkbox" value="true" name="TodoItem.IsCompleted" @(item.IsCompleted ? "checked" : "")>
                                <label>@item.Description</label>
                                <button class="destroy" asp-page-handler="delete"></button>
                            </div>
                            <input class="edit" name="TodoItem.Description" value="@item.Description" required>
                            <input type="hidden" value="false" name="TodoItem.IsCompleted">
                        </form>
                    </li>
                }
            </ul>
        </section>
        <!-- This footer should hidden by default and shown when there are todos -->
        <footer class="footer">
            <!-- This should be `0 items left` by default -->
            <span class="todo-count"><strong>@Model.TodoItems.Count(i => !i.IsCompleted)</strong> @(Model.TodoItems.Count(i => !i.IsCompleted) == 1 ? "item" : "items") left</span>
            <!-- Remove this if you don't implement routing -->
            <ul class="filters">
                <li>
                    <a class="@(Model.TodoFilter == TodoFilter.All ? "selected" : "")" href="~/">All</a>
                </li>
                <li>
                    <a class="@(Model.TodoFilter == TodoFilter.Active ? "selected" : "")" href="~/?TodoFilter=Active">Active</a>
                </li>
                <li>
                    <a class="@(Model.TodoFilter == TodoFilter.Completed ? "selected" : "")" href="~/?TodoFilter=Completed">Completed</a>
                </li>
            </ul>
            <!-- Hidden if no completed items are left ↓ -->
            @if (Model.TodoItems.Any(i => i.IsCompleted))
            {
                <form method="POST">
                    <button class="clear-completed" asp-page-handler="clearcompleted">Clear completed</button>
                </form>
            }
        </footer>
    }
</section>
<footer class="info">
    <p>Double-click to edit a todo</p>
</footer>
    
<script src="~/node_modules/jquery/dist/jquery.min.js"></script>
    
<script>
    $('#toggle-all').on('change', function() {
        this.form.markall.click();
    });

    $('.todo-list li .toggle').on('change', function() {
        this.form.update.click();
    });

    $('.todo-list li').on('dblclick', function() {
        this.classList.add('editing');
        $(this).find('.edit').focus();
    });
    
    $('.todo-list li .edit').on('focusin', function() {
        this.selectionStart = this.selectionEnd = this.value.length;
    });

    $('.todo-list li .edit').on('focusout', function () {
        $(this).parent('li').removeClass('editing');
        this.form.update.click();
    });
</script>
</body>
</html>
